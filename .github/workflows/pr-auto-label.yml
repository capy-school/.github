name: Auto label PRs

on:
  pull_request:
    types: [opened, edited, reopened, ready_for_review, synchronize]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  label:
    runs-on: ubuntu-latest
    steps:
      - name: Ensure Status: In Review for open PRs
        if: ${{ contains(fromJson('["opened","reopened","ready_for_review"]'), github.event.action) }}
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const current = (context.payload.pull_request.labels || []).map(l => l.name);
            if (!current.includes('Status: In Review')) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                labels: ['Status: In Review']
              });
            }
      - name: Apply Type label from PR title
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const title = context.payload.pull_request.title || '';
            const map = [
              { key: 'Type: Bug', patterns: ['[🐛', 'Type: Bug'] },
              { key: 'Type: Feature', patterns: ['[✨', 'Type: Feature'] },
              { key: 'Type: Tech Task', patterns: ['[🛠️', 'Type: Tech Task', 'Type: Tech'] },
              { key: 'Type: Research', patterns: ['[🔬', 'Type: Research'] },
              { key: 'Type: Question', patterns: ['[❓', 'Type: Question'] },
              { key: 'Type: Documentation', patterns: ['[📝', 'Type: Documentation'] },
              { key: 'Type: Epic', patterns: ['[🗺️', 'Type: Epic'] }
            ];
            const found = map.find(m => m.patterns.some(p => title.includes(p)));
            if (!found) return;
            const existing = (context.payload.pull_request.labels || []).map(l => l.name);
            if (existing.includes(found.key)) return;
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              labels: [found.key]
            });